//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package tableclient

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Row) DeepCopyInto(out *Row) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]metav1.TableColumnDefinition, len(*in))
		copy(*out, *in)
	}
	in.TableRow.DeepCopyInto(&out.TableRow)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Row.
func (in *Row) DeepCopy() *Row {
	if in == nil {
		return nil
	}
	out := new(Row)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Row) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RowList) DeepCopyInto(out *RowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]metav1.TableColumnDefinition, len(*in))
		copy(*out, *in)
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Row, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RowList.
func (in *RowList) DeepCopy() *RowList {
	if in == nil {
		return nil
	}
	out := new(RowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
